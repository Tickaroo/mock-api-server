// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var Dsl, isObject, ResponseSpecification, url;
  isObject = require('underscore').isObject;
  ResponseSpecification = require('./responder').ResponseSpecification;
  url = require('url');
  Dsl = function () {
    function Dsl(param$, param$1) {
      this._addResponseSpecification = param$;
      this._path = param$1[0];
      this._withMode = 'replaceContent';
    }
    Dsl.prototype.byReplacing = function (key) {
      this._withMode = 'replaceKey';
      this._key = key;
      return this;
    };
    Dsl.prototype['with'] = function (what) {
      var body, cache$, cache$1, pathname, query, spec, statusCode;
      if (isObject(what)) {
        cache$ = what;
        body = cache$.body;
        statusCode = cache$.statusCode;
        cache$;
      } else {
        body = what;
        statusCode = 200;
      }
      cache$1 = url.parse(this._path, true);
      pathname = cache$1.pathname;
      query = cache$1.query;
      spec = function () {
        switch (this._withMode) {
        case 'replaceContent':
          return {
            path: pathname,
            method: 'GET',
            query: query,
            body: body,
            statusCode: statusCode
          };
        case 'replaceKey':
          return {
            path: pathname,
            method: 'GET',
            query: query,
            replaceKey: this._key,
            replaceValue: what
          };
        }
      }.call(this);
      return this._addResponseSpecification(spec);
    };
    return Dsl;
  }();
  module.exports = Dsl;
}.call(this);
